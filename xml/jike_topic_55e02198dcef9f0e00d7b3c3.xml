<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link><atom:link href="http://rsshub.rssforever.com/jike/topic/55e02198dcef9f0e00d7b3c3" rel="self" type="application/rss+xml"></atom:link><description>开发者们分享，问答，也可以交友的地方。欢迎所有工程师！ - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><image><url>https://cdnv2.ruguoapp.com/FkFcHSgyNRo4yKxLYMVbDDP6gwdk.png?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/1000x1000%3E</url><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link></image><lastBuildDate>Sat, 04 Oct 2025 00:04:39 GMT</lastBuildDate><ttl>5</ttl><item><title>🎉 推荐一本在Github上开源的书籍《大模型基础》 我看了几个章节，感觉这本书确实挺不错的，推荐 还有什么类似的书籍推荐阅读吗？求推荐，求知若渴中 🫠 htt...</title><description>🎉  推荐一本在Github上开源的书籍《大模型基础》 &lt;br&gt;&lt;br&gt;我看了几个章节，感觉这本书确实挺不错的，推荐&lt;br&gt;&lt;br&gt;还有什么类似的书籍推荐阅读吗？求推荐，求知若渴中 🫠&lt;br&gt;&lt;br&gt;https://github.com/ZJU-LLMs/Foundations-of-LLMs&lt;br&gt;&lt;br&gt;介绍：本书旨在为对大语言模型感兴趣的读者系统地讲解相关基础知识、介绍前沿技术。&lt;br&gt;&lt;br&gt;本书第一版包括传统语言模型、大语言模型架构演化、Prompt工程、参数高效微调、模型编辑、检索增强生成等六章内容。&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Flkp3VjtPaHvlPFJml8DwsIcBVrpv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68df93af3ea7571a784295ac</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68df93af3ea7571a784295ac</guid><pubDate>Fri, 03 Oct 2025 09:13:19 GMT</pubDate><author>Indie-Maker-Fox</author></item><item><title>给 Nexty 模板新增一个获取 icon 的方法，但是现在 Google S2 的服务只能拿到很糊的图片。 请问还有什么能够拿到高清 logo 的服务吗？</title><description>给 Nexty 模板新增一个获取 icon 的方法，但是现在 Google S2 的服务只能拿到很糊的图片。&lt;br&gt;&lt;br&gt;请问还有什么能够拿到高清 logo 的服务吗？&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FoNXM5jcJxG_hWvkvr4xcN9DHU3Jv3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68df77bc00c0686ab5111dca</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68df77bc00c0686ab5111dca</guid><pubDate>Fri, 03 Oct 2025 07:14:04 GMT</pubDate><author>BigYe程普</author></item><item><title>糟糕，我至少2部手机，算什么？</title><description>糟糕，我至少2部手机，算什么？&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FkadHkkegtRI6ImpWRO4imE3kAsWv3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68df3387e2c45df2206d93a3</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68df3387e2c45df2206d93a3</guid><pubDate>Fri, 03 Oct 2025 02:23:03 GMT</pubDate><author>火耀星</author></item><item><title>昨天看到 @哥飞 飞哥在群里说 Sora 2 邀请码接龙，于是追了一个热点(1.5 UV)，学习如何快速上站，提示词详见图片 过程： 1) 在Trends 中发现 Sora invite Code ...</title><description>昨天看到  @哥飞 飞哥在群里说 Sora 2 邀请码接龙，于是追了一个热点(1.5 UV)，学习如何快速上站，提示词详见图片&lt;br&gt;&lt;br&gt;过程：&lt;br&gt;1) 在Trends 中发现 Sora invite Code 流量飙升&lt;br&gt;2) 更新积累的追词提示词模板&lt;br&gt;3) 使用 Cursor 上站&lt;br&gt;4) 加外链&lt;br&gt;5) 增加用户提交激活码入口 @良辰美 感谢良老师&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fi6WK1HIiiwUOjrpMVCx3a5RCD5Kv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fn5QSJjTvQqdJ6rKog5JTMxtWAjjv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fvzc6SaKkjBinpCb6I40EmxjjNuDv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FhfS-Q-Ftct6z3xT4Kxj3wbFisdUv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68dea461a07dccc0e0002342</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68dea461a07dccc0e0002342</guid><pubDate>Thu, 02 Oct 2025 16:12:17 GMT</pubDate><author>Polari</author></item><item><title>那个曾“零用户”的开发者，如何靠一个SaaS，60天获取3000用户？ 我开始做产品，到现在也就一年多点。 在这段旅程中，我经历过闭门造车好几个月，结果一个注册用...</title><description>那个曾“零用户”的开发者，如何靠一个SaaS，60天获取3000用户？&lt;br&gt;&lt;br&gt;我开始做产品，到现在也就一年多点。&lt;br&gt;在这段旅程中，我经历过闭门造车好几个月，结果一个注册用户、一个付费客户都没有的绝望。我试过你在Reddit上能找到的所有营销方法，结果链接点击量永远是0。&lt;br&gt;我也做出过一个SaaS产品，在过去60天里，获得了 23,000次点击，转化了 3,000名用户。&lt;br&gt;这两种经历的差别，天壤之别。而造成这种差别的唯一原因，就是“需求”。&lt;br&gt;今天，我想把我踩过的坑，和我悟出的这点道理，分享给你。&lt;br&gt;&lt;br&gt;最大的陷阱：在没有真实需求的地方，埋头苦干&lt;br&gt;对于新手创始人来说，最大的陷阱，就是在没有真实需求的地方开工。这就像走进健身房，却没有任何训练计划，随便找个器械就练，然后指望能练出好身材。&lt;br&gt;&lt;br&gt;当你为一个真实存在的需求去开发时，整个游戏难度，会从“地狱模式”，瞬间切换到“普通模式”。 增长当然还需要努力，但你再也不会遇到那堵无论如何也无法穿透的营销之墙了。&lt;br&gt;&lt;br&gt;市面上有无数种做产品的方法。但如果你是认真的，想跳过所有凭空猜测，真正做到月入1万美金，那其实只有一条路是行得通的。&lt;br&gt;这条路的核心，就是在你投入数月时间开发之前，优先去发现真实的需求。&lt;br&gt;&lt;br&gt;以下，是我严格遵循的流程：&lt;br&gt;第一步：从你自己的生活中，找到一个你愿意为之付费的问题&lt;br&gt;&lt;br&gt;- 在你的日常生活中，有什么让你每天或每周都感到沮丧的事？ 如果它困扰着你，那很有可能，也困扰着成千上万的其他人。&lt;br&gt;&lt;br&gt;- 在你的工作中，你遇到了什么障碍？ 公司已经付钱让你去处理的那些问题里，有没有可以产品化的机会？&lt;br&gt;&lt;br&gt;- 你有什么消耗你大量时间的爱好？ 当你深度沉浸于某件事时，你自然会发现其中所有恼人的空白和问题。&lt;br&gt;&lt;br&gt;找到一个对你来说足够重要，以至于你愿意自己掏钱去解决的问题。&lt;br&gt;&lt;br&gt;第二步：构建一个最基础的解决方案轮廓&lt;br&gt;&lt;br&gt;一旦你发现了一个真实的问题，解决方案通常会立刻在你脑海中形成。&lt;br&gt;&lt;br&gt;你不需要把每个功能都画出来。你只需要一个清晰的、易于解释的概念，让你的目标受众能立刻听懂。&lt;br&gt;&lt;br&gt;第三步：与真人验证，证明问题存在，且他们愿意付钱&lt;br&gt;先从你的人脉圈开始。没有人脉？Reddit是完美的起点，那里几乎有你能想到的所有圈子。&lt;br&gt;&lt;br&gt;写一篇真诚的求助帖，不是为了推销，而是为了寻求建议，并为他们的时间提供价值。&lt;br&gt;&lt;br&gt;深挖四个关键问题：&lt;br&gt;&amp;gt;这真的是他们的问题吗？&lt;br&gt;&amp;gt;这个问题对他们的生活/工作，有什么真实的影响？&lt;br&gt;&amp;gt;他们现在用什么“凑合”的办法来解决？&lt;br&gt;&amp;gt;他们是否愿意“投资”一笔钱，来换取一个更好的解决方案？&lt;br&gt;&lt;br&gt;关键： 关注他们“已经做了什么”，而不是他们声称“将会做什么”。&lt;br&gt;很多人会说“我坚持健身”，但当你追问细节时，他可能上个月只去了两次健身房。&lt;br&gt;&lt;br&gt;第四步：快速发布你的MVP (最小可行产品)&lt;br&gt;当你手握一个被验证过的问题时，克制住你想构建所有功能的冲动。&lt;br&gt;只发布那个能真正解决核心问题的、最基础的版本。&lt;br&gt;伟大的产品，是在真实的使用和用户输入中，逐步演化出来的。我的产品从第一天到现在，也已经发生了巨大的变化。&lt;br&gt;&lt;br&gt;提醒： 尽管会收到各种反馈，但始终要专注于你的核心问题和愿景。&lt;br&gt;&lt;br&gt;用户会要求那些只服务于他们个人特殊需求的功能，但这些功能可能会让你的产品偏离航向。用你正在解决的那个核心问题，去过滤每一个建议。&lt;br&gt;&lt;br&gt;写在最后&lt;br&gt;希望这篇文章，对作为一个新手创始人的你，能有所帮助。&lt;br&gt;这个流程，对我来说，改变了一切。所以我想尽我的一份力，把它分享给你。&lt;br&gt;因为，这正是我刚起步时，最需要听到的东西。&lt;br&gt;&lt;br&gt;--------&lt;br&gt;然后这个故事末尾，贴上了分享者的产品链接&lt;br&gt;这，就是Reddit&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fuj-7FV5BWv1qXCcrVAG1qdJ9-A7v3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68de43d6d9abb9785d2efe76</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68de43d6d9abb9785d2efe76</guid><pubDate>Thu, 02 Oct 2025 09:20:22 GMT</pubDate><author>Yangyi.</author></item><item><title>Sora 2 火了，我一朋友立马嗅到商机，说要抢注 sora2downloader域名，大干一场。 我直接给他泼了三盆冷水，从技术可行性聊到 OpenAI 的“商标大棒”，告诉他这想...</title><description>Sora 2 火了，我一朋友立马嗅到商机，说要抢注 sora2downloader域名，大干一场。&lt;br&gt;&lt;br&gt;我直接给他泼了三盆冷水，从技术可行性聊到 OpenAI 的“商标大棒”，告诉他这想法离收到律师函只有一步之遥。🚫&lt;br&gt;&lt;br&gt;但他看准风口的热情不能被浇灭。于是，我们又一起从“寄生思维”转向“共生思维”，找到了5个更安全、更赚钱的“卖水”思路。&lt;br&gt;&lt;br&gt;核心的转变，其实就在于一个“/”的用法上。&lt;br&gt;&lt;br&gt;我把我们俩这场价值百万的对话和思考，完整复盘成了一篇长文，希望能帮到同在 AI 浪潮里寻找机会的你：https://mp.weixin.qq.com/s/PYhxgVgB2na0J7D56cX2Kw</description><link>https://m.okjike.com/originalPosts/68dc9db81ed9b53c78abcb5a</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68dc9db81ed9b53c78abcb5a</guid><pubDate>Wed, 01 Oct 2025 03:19:20 GMT</pubDate><author>火耀星</author></item><item><title>看到sora2来了之后 你会想到啥？ 我想到的是 sora2 video downloader.....🤡</title><description>看到sora2来了之后&lt;br&gt;你会想到啥？&lt;br&gt;&lt;br&gt;我想到的是  sora2 video downloader.....🤡</description><link>https://m.okjike.com/originalPosts/68dc81c83ea7571a78031ba5</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68dc81c83ea7571a78031ba5</guid><pubDate>Wed, 01 Oct 2025 01:20:08 GMT</pubDate><author>Yangyi.</author></item><item><title>👨‍💻 给大家推荐一个我一直在用的工具：FrogDR https://frogdr.com 它可以监控网站的DR值变化，目前DR排行榜中，前3都是基于Mk模板开发的， ToolFame是用M...</title><description>👨‍💻 给大家推荐一个我一直在用的工具：FrogDR&lt;br&gt;&lt;br&gt;https://frogdr.com&lt;br&gt;&lt;br&gt;它可以监控网站的DR值变化，目前DR排行榜中，前3都是基于Mk模板开发的，&lt;br&gt;ToolFame是用Mkdirs模板开发，NanoPhoto和IPConfig是用MkSaaS模板开发的。&lt;br&gt;&lt;br&gt;MkSaaS模板的SEO做得远超同类型模板，尤其是对多语言网站的SEO支持和优化。&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fsazqi3V_KP-nYhTwxitGrBmXSzqv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68dc811fd9abb9785d0b3cdc</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68dc811fd9abb9785d0b3cdc</guid><pubDate>Wed, 01 Oct 2025 01:17:19 GMT</pubDate><author>Indie-Maker-Fox</author></item><item><title>写给编程小白看的 Vibe Debugging 注意事项（2） 前情提要，在本系列的第一篇里，我着重提到「组件化思维」以及软件工程的一些基本概念，对于正在尝试 Vibe Codi...</title><description>写给编程小白看的 Vibe Debugging 注意事项（2） &lt;br&gt;&lt;br&gt;前情提要，在本系列的第一篇里，我着重提到「组件化思维」以及软件工程的一些基本概念，对于正在尝试 Vibe Coding 的编程小白来说，是必须掌握的思考方式与技能。&lt;br&gt;&lt;br&gt;这种思维方式与技能，在掌握了之后，当程序运行时遇到 bug，就不会直接把报错复制粘贴过去，而是可以迅速猜到问题产生的地方，从而提高与大模型的沟通效率，也能够节约 token。&lt;br&gt;&lt;br&gt;良好的结构，是软件开发中立于不败之地的重要前提。&lt;br&gt;&lt;br&gt;那么问题来了，什么是良好的软件结构？良好的软件结构有什么特点？如何了解自己手上开发的软件是否具备良好的结构？如何学习，让自己具备这种良好软件结构的嗅觉？&lt;br&gt;&lt;br&gt;*数据流清晰，符合单一原则*&lt;br&gt;&lt;br&gt;程序它有两个口，一个是入口，一个是出口。入口输入的是数据，出口输出的也是数据。程序的目的，就是为了处理数据，不管是处理 1+1 = 2，还是把字体改为加粗，都是对输入的数据进行处理，然后再输出。&lt;br&gt;&lt;br&gt;所以，良好的软件结构，在处理数据的时候，会非常清晰，这中间数据从组件 A 到组件 B，再到组件 C，这是一条清晰的路线，不会中间打岔。&lt;br&gt;&lt;br&gt;每个组件的职责也很清晰，从哪里获得数据，如何处理，输出什么结果——不过一个优秀的组件通常职责是单一的，它只解决一种，甚至是一个问题，绝不大包大揽。&lt;br&gt;&lt;br&gt;当然对于编程小白而言，直接观察数据的流动是有点难的，因为极大的可能，是连数据的类型都不懂。&lt;br&gt;&lt;br&gt;我一开始也这样，好像「鬼打墙」一样，同一个 bug 反复出现。当时我完全不懂数据类型，但是我用另外一个方法，让我掌握了数据的流动，那就是观察函数之间的相互调用。&lt;br&gt;&lt;br&gt;调用这个词看上去很专业，其实理解并不难，就是你复制了一个函数名，然后，在 VSCode 里面全局搜索一遍，看看这个函数名是否会出现其它的函数里。如果出现了，那么证明了这个函数被其它函数调用。&lt;br&gt;&lt;br&gt;这是一个最简单的方法，让你在完全不具备编程概念，去了解程序里数据流动的一个方法。另外就是，揣摩函数名的意思，LLM 给函数命名一般都很直白，尽管有时候显得啰嗦。&lt;br&gt;&lt;br&gt;总之，不管是不是编程小白，都不可避免要阅读代码。如果想提高自己的问题解决能力，那就养成习惯，不要一出现问题就马上问 LLM，而是应该先阅读问题产生的代码，看看问题发生的地方。&lt;br&gt;&lt;br&gt;*以终为始的思考方式*&lt;br&gt;&lt;br&gt;我不知道你身边是否有那种朋友，他们思维逻辑很清晰，而且总能快人一步发现问题，解决问题的能力也非常强。我身边挺多这种朋友的，经过观察，他们通常都喜欢用「以终为始」的方式去思考问题。&lt;br&gt;&lt;br&gt;「以终为始」就是，以最终目标出发点，一步步倒推，一直倒推到开始的第一步为止。这种思考通常比较消耗精力，但是只要习惯了，这种思考上的消耗就没什么大不了的。&lt;br&gt;&lt;br&gt;通常，在开发一个软件之前，我们在一步步倒推的时候，就能够摸出一个清晰的数据路线。我的习惯是，一边倒推一边用执笔写写画画，帮助自己思考。这时候，我会在草稿纸上列出这一次开发想达到的目标，然后我会往下列一个个要达到这个步骤。&lt;br&gt;&lt;br&gt;实际上，这些步骤，就是我在第一篇里提到的「组件」。第一个步骤要完成什么，然后才能让第二个步骤处理什么，以此类推，很快你得到了一张路线图，也同时得到了一个软件结构图。&lt;br&gt;&lt;br&gt;而在这个过程中， 如果你发现哪里步骤不清晰，哪里步骤有问题，那都是不好的结构，只要你逐步修正，一个良好的结构就会自然浮出水面。&lt;br&gt;&lt;br&gt;从任务执行的角度来看待程序，它就是一系列经过设计的，达到目的之前需要完成的步骤。&lt;br&gt;&lt;br&gt;*多参考优秀项目*&lt;br&gt;&lt;br&gt;这里涉及一个人的「品位」。大家也知道，「品味」是一种微妙的感觉，你说不出是为什么，但就是「真 TMD 的好！」&lt;br&gt;&lt;br&gt;如果想让自己在 Vibe Coding 的时候，培养对软件工程的品味，不必每一次都和神出鬼没的 bug 玩捉迷藏，我们可以直接参考优秀的项目，看看它们是怎么做的。&lt;br&gt;&lt;br&gt;我说的参考，不是打开一个 Github 仓库，然后看看里面的分别有什么文件就算完事了，而是要深入到代码层。就好像我刚才说的， 直接全局检索函数名，然后看看它都出现在哪里。&lt;br&gt;&lt;br&gt;而且现在有 LLM 以及 DeepWiki 还有 zread 等工具，都可以直接解读一个 Github 仓库里的代码之间的关系和结构。&lt;br&gt;&lt;br&gt;不过我还推荐我的做法，直接将一个仓库 Clone 到硬盘，然后启动 Gemini CLI，输入一句：这个项目是干什么的？它的结构是什么？&lt;br&gt;&lt;br&gt;然后，你就等着这位赛博菩萨吭哧吭哧地帮你整理出一个优秀的文档来，这个项目是干嘛的， 有什么组件，每个组件是干嘛的，罗列得很清楚。然后按照这份地图，打开对应的文件，参观里面的代码，看看别人是怎么写的。&lt;br&gt;&lt;br&gt;多读代码，多读别人的，多读自己的，然后对比一下。书读多了，其义自现。</description><link>https://m.okjike.com/originalPosts/68db522fc29dd3743f6975a8</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68db522fc29dd3743f6975a8</guid><pubDate>Tue, 30 Sep 2025 03:44:47 GMT</pubDate><author>Yibie</author></item><item><title>#高质量外链分享 分享一个超高质量的外链分享 著名社区Indiehackers出的产品launchpad，免费提交，很简单，填下网站信息即可</title><description>&lt;img src=&quot;https://cdnv2.ruguoapp.com/icons/link.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;            &lt;a href=&quot;http://indiehackers.com/products&quot;&gt;http://indiehackers.com/products&lt;/a&gt;&lt;br&gt;        &lt;br&gt;#高质量外链分享 &lt;br&gt;分享一个超高质量的外链分享&lt;br&gt;&lt;br&gt;著名社区Indiehackers出的产品launchpad，免费提交，很简单，填下网站信息即可</description><link>https://m.okjike.com/originalPosts/68db2e7700c0686ab5b844ef</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68db2e7700c0686ab5b844ef</guid><pubDate>Tue, 30 Sep 2025 01:12:23 GMT</pubDate><author>小邱很行</author></item></channel></rss>