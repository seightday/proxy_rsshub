<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link><atom:link href="http://rsshub.rssforever.com/jike/topic/55e02198dcef9f0e00d7b3c3" rel="self" type="application/rss+xml"></atom:link><description>开发者们分享，问答，也可以交友的地方。欢迎所有工程师！ - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><image><url>https://cdnv2.ruguoapp.com/FkFcHSgyNRo4yKxLYMVbDDP6gwdk.png?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/1000x1000%3E</url><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link></image><lastBuildDate>Fri, 25 Jul 2025 00:53:47 GMT</lastBuildDate><ttl>5</ttl><item><title>又踩了Unity一个坑：InputSystem的SwitchProControllerHID是给Windows平台下的NSPro手柄用的。 真正编译NS包时，这玩意要用宏隔离掉🙄</title><description>又踩了Unity一个坑：InputSystem的SwitchProControllerHID是给Windows平台下的NSPro手柄用的。&lt;br&gt;真正编译NS包时，这玩意要用宏隔离掉🙄</description><link>https://m.okjike.com/originalPosts/688259120232bb9de55fb0a4</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/688259120232bb9de55fb0a4</guid><pubDate>Thu, 24 Jul 2025 16:02:26 GMT</pubDate><author>杰克有茶</author></item><item><title>Vibe coding 现状： 卖课的/自媒体：太强了，没有我开发不了的软件！ 程序员：艹，还不如我自己写！</title><description>Vibe  coding  现状：&lt;br&gt;卖课的/自媒体：太强了，没有我开发不了的软件！&lt;br&gt;程序员：艹，还不如我自己写！</description><link>https://m.okjike.com/originalPosts/688238097ee613ba5adfc55a</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/688238097ee613ba5adfc55a</guid><pubDate>Thu, 24 Jul 2025 13:41:29 GMT</pubDate><author>dangjin</author></item><item><title>用 AI 写代码，一觉起来可能会倒欠一套房吗？ 有可能的，如果你用某 QC 的话，建议还是用 CC 吧。</title><description>用 AI 写代码，一觉起来可能会倒欠一套房吗？&lt;br&gt;有可能的，如果你用某 QC 的话，建议还是用 CC 吧。</description><link>https://m.okjike.com/originalPosts/6881f41d29b2c2ecef1ed7a9</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6881f41d29b2c2ecef1ed7a9</guid><pubDate>Thu, 24 Jul 2025 08:51:41 GMT</pubDate><author>哥飞</author></item><item><title># 🔥 Claude Code 一周热榜：开发者都在玩什么新花样？ 刚刚扫了一圈 GitHub，发现最近一周 Claude Code 的生态简直爆炸了！440 个新项目，个个都有意思。挑了...</title><description># 🔥 Claude Code 一周热榜：开发者都在玩什么新花样？&lt;br&gt;&lt;br&gt;刚刚扫了一圈 GitHub，发现最近一周 Claude Code 的生态简直爆炸了！440 个新项目，个个都有意思。挑了 20 个最 🔥 的跟大家分享～&lt;br&gt;&lt;br&gt;## 🚀 最让人眼前一亮的项目&lt;br&gt;&lt;br&gt;### 📱 移动端来了！&lt;br&gt;**[Happy Coder](https://github.com/slopus/happy)** - 终于有人做了移动版 Claude Code 客户端！再也不用守着电脑敲代码了，地铁上也能 Vibe Coding 😎&lt;br&gt;&lt;br&gt;**[Clauder](https://github.com/ZohaibAhmed/clauder)** - 更狠，直接用 iPhone 远程控制桌面的 Claude Code，躺床上写代码不是梦 🛌&lt;br&gt;&lt;br&gt;### 🦀 Rust 党狂欢&lt;br&gt;**[claude-code-api-rs](https://github.com/ZhangHanDong/claude-code-api-rs)** - 高性能 Rust 实现的 API 网关，OpenAI 兼容，性能怪兽 ⚡&lt;br&gt;&lt;br&gt;**[cc-monitor-rs](https://github.com/ZhangHanDong/cc-monitor-rs)** - 实时监控 Claude Code 使用情况，用了 Makepad 做原生 UI，颜值在线 📊&lt;br&gt;&lt;br&gt;### 🔧 工作流神器&lt;br&gt;**[claude-code-spec-workflow](https://github.com/Pimzino/claude-code-spec-workflow)** - 把&quot;需求→设计→任务→实现&quot;整个流程自动化了，再也不怕需求变更 📋&lt;br&gt;&lt;br&gt;**[Kiro Claude Code](https://github.com/stillfox-lee/kiro-claude-code)** - 像有个技术经理坐在旁边，帮你梳理需求、设计方案、制定计划，Context Engineering 的最佳实践 🧠&lt;br&gt;&lt;br&gt;## 🛠 开发者必备工具箱&lt;br&gt;&lt;br&gt;- **[Claude-Code-Toolkit](https://github.com/xixu-me/Claude-Code-Toolkit)** - 跨平台管理工具，支持所有 Anthropic 兼容的 API，中英文都有&lt;br&gt;- **[Agent Toolbox](https://github.com/czottmann/agent-toolbox)** - 命令、规则、设置一应俱全，还能和 Gemini 互操作&lt;br&gt;- **[claude_commands](https://github.com/EveryInc/claude_commands)** - EveryInc 团队精选的命令集合，专业团队出品&lt;br&gt;- **[claude-code-settings](https://github.com/feiskyer/claude-code-settings)** - 流畅编码体验的配置优化&lt;br&gt;&lt;br&gt;## 🌐 多语言生态爆发&lt;br&gt;&lt;br&gt;- **[PHP SDK](https://github.com/HelgeSverre/claude-code-sdk-php)** - PHP 开发者终于有官方支持了&lt;br&gt;- **[TypeScript Hooks](https://github.com/bartolli/claude-code-typescript-hooks)** - 前端同学的专属工具&lt;br&gt;- **[DashScope 配置](https://github.com/dashscope/claude-code-config)** - 阿里云生态接入&lt;br&gt;&lt;br&gt;## 🔮 有趣的实验项目&lt;br&gt;&lt;br&gt;**[Lovelace IDE](https://github.com/adacahq/lovelace-ide)** - 基于 VS Code，原生集成 Claude Code，IDE 和 AI 的完美融合&lt;br&gt;&lt;br&gt;**[Pix Canvas](https://github.com/hmldns/pix-canvas)** - 多人实时像素画布，用 WebRTC + Claude 驱动，AI 开发的最佳演示&lt;br&gt;&lt;br&gt;**[claude-code-open](https://github.com/Davincible/claude-code-open)** - 支持 OpenRouter、Gemini、Kimi K2 等多个 LLM 提供商，选择恐惧症福音&lt;br&gt;&lt;br&gt;## 💡 趋势观察&lt;br&gt;&lt;br&gt;看这一波项目，几个明显的趋势：&lt;br&gt;&lt;br&gt;1. **移动化** - 大家开始把 AI 编程搬到手机上了&lt;br&gt;2. **工作流化** - 不只是写代码，而是整个开发流程的重新设计&lt;br&gt;3. **多语言** - 不只是 Python/JS</description><link>https://m.okjike.com/originalPosts/688182f3d2084fb6d9c6cbfa</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/688182f3d2084fb6d9c6cbfa</guid><pubDate>Thu, 24 Jul 2025 00:48:51 GMT</pubDate><author>风哥-全栈ai工程师</author></item><item><title>最近带一个实习生，给了他一个不算复杂的小项目，前后端加点部署。我本来很开心，觉得他能趁这个机会，把一个完整的项目从 0 跑通，对工程能力是很好的锻炼。 他...</title><description>最近带一个实习生，给了他一个不算复杂的小项目，前后端加点部署。我本来很开心，觉得他能趁这个机会，把一个完整的项目从 0 跑通，对工程能力是很好的锻炼。&lt;br&gt;&lt;br&gt;他是学计算机的，我知道学校里更多教的是理论，真正实战的经验还是要靠项目来补。也正是因为这样，我更希望他能通过这个任务，真正学点东西。&lt;br&gt;&lt;br&gt;结果他一上来就直接让llm 写代码，demo 很快跑出来了，界面看着也“像那么回事”。但一看细节，全是 bug，还有很多edge cases 完全不考虑。我问他为什么逻辑这么设计，他也很直白：“我也不清楚，是 llm 写的。”&lt;br&gt;&lt;br&gt;我当时有点沉默，说不出是失望还是担心。最后我只能帮他从头把代码一行行捋一遍，才勉强交付。还好项目够小，重写不算太难。&lt;br&gt;&lt;br&gt;我不是反对用 AI 写代码，相反我自己也在用。但我一直相信：工具是辅助，不是替代；理解是根本，而不是跳过。&lt;br&gt;&lt;br&gt;LLM 可以提高效率，但它不能替我们成长。如果一上来就把整个逻辑交给模型，最后连自己写了什么都搞不懂，那我们永远都不会是那个能独立完成项目的人。&lt;br&gt;&lt;br&gt;我不是在批评这个实习生——他是个聪明的同学。我只是突然意识到，也许我们正身处一个危险的习惯转折点：&lt;br&gt;&lt;br&gt;年轻工程师太早依赖模型，而不愿花时间理解代码背后的结构与逻辑。这，真的很危险。&lt;br&gt;&lt;br&gt;总结一下思考吧，也算是共勉，毕竟现在技术更新很快，每个人在某些地方都会是新手：&lt;br&gt;· AI 的强大不应该成为“偷懒”的理由，而是应该成为我们加深思考的辅助；&lt;br&gt;· Vibe coding 也要看修改了什么代码，如果是不熟悉的语言，也要尝试去理解，让模型解释，久而久之就能理解了&lt;br&gt;· 成长一定是“痛感 +打磨”的结合，模型不能替代这两个部分。</description><link>https://m.okjike.com/originalPosts/6880c88b7ee613ba5ac71062</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6880c88b7ee613ba5ac71062</guid><pubDate>Wed, 23 Jul 2025 11:33:31 GMT</pubDate><author>Liz_Li</author></item><item><title>最近和朋友聊天，多次表达过一个观点： 当国内大模型，从编程角度，模型的效果只要实打实的追平 claude 3.7以上(因为3.7之后我没有一行完整的代码是自己手码的)...</title><description>最近和朋友聊天，多次表达过一个观点：&lt;br&gt;当国内大模型，从编程角度，模型的效果只要实打实的追平 claude 3.7以上(因为3.7之后我没有一行完整的代码是自己手码的)，那么程序员的裁员大潮就开始了，裁员速度随着时间应该是指数性的。</description><link>https://m.okjike.com/originalPosts/688046c16ad01e0258a694cc</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/688046c16ad01e0258a694cc</guid><pubDate>Wed, 23 Jul 2025 02:19:45 GMT</pubDate><author>凯祭恩Kaijien</author></item><item><title>今天体验了一天Github Copilot，感觉不错，已经把Cursor取消订阅了</title><description>今天体验了一天Github Copilot，感觉不错，已经把Cursor取消订阅了&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FuENacNECvYpOwxw-OfUjf-jwqiBv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/687f725cdd8964fa785be5bb</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/687f725cdd8964fa785be5bb</guid><pubDate>Tue, 22 Jul 2025 11:13:32 GMT</pubDate><author>程艺Truman</author></item><item><title>小小的小宇宙SDK Python版 吸取了Jike-Metro的一些经验，更快更易拓展。</title><description>&lt;img src=&quot;https://cdnv2.ruguoapp.com/icons/link.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;            &lt;a href=&quot;https://github.com/Sorosliu1029/cosmos-wormhole&quot;&gt;https://github.com/Sorosliu1029/cosmos-wormhole&lt;/a&gt;&lt;br&gt;        &lt;br&gt;小小的小宇宙SDK Python版&lt;br&gt;&lt;br&gt;吸取了Jike-Metro的一些经验，更快更易拓展。</description><link>https://m.okjike.com/originalPosts/687f533ff564a21d70dd87f0</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/687f533ff564a21d70dd87f0</guid><pubDate>Tue, 22 Jul 2025 09:00:47 GMT</pubDate><author>刘-_-勋-..-阳</author></item><item><title>分享一个最近 Vibe Coding 的方法，简单有效： 1. 在 Gemini CLI 里，先输入一句：我不需要你直接修改文件和函数，我希望你指出需要修改的函数，以及提供修改后...</title><description>分享一个最近 Vibe Coding 的方法，简单有效：&lt;br&gt;&lt;br&gt;1. 在 Gemini CLI 里，先输入一句：我不需要你直接修改文件和函数，我希望你指出需要修改的函数，以及提供修改后的版本，让我手动处理。&lt;br&gt;&lt;br&gt;2. 按照正常情景下，输入你希望 Gemini CLI 完成的任务。&lt;br&gt;&lt;br&gt;3. 将 Gemini CLI 回复的内容，复制到 Cursor，将模型调整到 Auto 模式。&lt;br&gt;&lt;br&gt;然后你就会发现，这个方式：&lt;br&gt;&lt;br&gt;- 避免了 Gemini CLI 脆弱的工具调用能力，和老是出现的 string error，无法找到文件中对应的部分进行修改的错误&lt;br&gt;&lt;br&gt;- 同时应用了Cursor 的 Auto 模式强大的发现代码，和工具调用的能力&lt;br&gt;&lt;br&gt;- 而且，还结合了 Gemini 强大的代码解读能力，超强上下文，以及强大的代码输出能力</description><link>https://m.okjike.com/originalPosts/687f51bcf564a21d70dd71b3</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/687f51bcf564a21d70dd71b3</guid><pubDate>Tue, 22 Jul 2025 08:54:21 GMT</pubDate><author>Yibie</author></item><item><title>发现昨天大半夜的stripe线上webhook失败了好几次，排查了一会发现了问题。 按正常流程，新建订阅收到的webhook顺序是 1. customer.subscription.created(status:...</title><description>发现昨天大半夜的stripe线上webhook失败了好几次，排查了一会发现了问题。&lt;br&gt;&lt;br&gt;按正常流程，新建订阅收到的webhook顺序是&lt;br&gt;&lt;br&gt;1. customer.subscription.created(status: incomplete)&lt;br&gt; 2.customer.subscription.updated(status: active)&lt;br&gt;&lt;br&gt;但实际上这笔我是先收到了updated再收到了created，导致原本按顺序先新增再更新的逻辑就不对了，我created的webhook就一直返回失败。&lt;br&gt;&lt;br&gt;搜了一下，发现Stripe 的 webhook 事件并不保证顺序！原因包括：&lt;br&gt;- 并发发送: Stripe 可能同时发送多个事件&lt;br&gt;- 网络延迟: 不同事件的网络传输时间可能不同&lt;br&gt;- 重试机制: 如果某个事件失败，会重试，可能导致顺序混乱&lt;br&gt;- 服务器处理时间: 你的服务器处理不同事件的时间可能不同&lt;br&gt;&lt;br&gt;所以在写webhook的时候，一定得充分考虑到各种corner case&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FsNspIaxsQTUuy9FuB9IA3PlMVb1v3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/687eef88f0965921087d6459</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/687eef88f0965921087d6459</guid><pubDate>Tue, 22 Jul 2025 01:55:20 GMT</pubDate><author>小邱很行</author></item></channel></rss>