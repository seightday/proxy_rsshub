<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link><atom:link href="http://rsshub.rssforever.com/jike/topic/55e02198dcef9f0e00d7b3c3" rel="self" type="application/rss+xml"></atom:link><description>开发者们分享，问答，也可以交友的地方。欢迎所有工程师！ - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><image><url>https://cdnv2.ruguoapp.com/FkFcHSgyNRo4yKxLYMVbDDP6gwdk.png?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/1000x1000%3E</url><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link></image><lastBuildDate>Thu, 08 May 2025 00:48:04 GMT</lastBuildDate><ttl>5</ttl><item><title>防火防盗防同行😓</title><description>防火防盗防同行😓&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fl1FhPlhFJZj161gAUxoCReX8J-Cv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/681b4afb2481e2c7be191c57</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/681b4afb2481e2c7be191c57</guid><pubDate>Wed, 07 May 2025 11:58:51 GMT</pubDate><author>风巢森淼</author></item><item><title>翻石头，挖需求，找PMF（14） 今天继续看了中国区工具榜+ProductHunt日榜。 几个总结： 1、光看排行榜看不出来这些应用是怎么推广的，其实我现在更关注他们流量...</title><description>翻石头，挖需求，找PMF（14）&lt;br&gt;&lt;br&gt;今天继续看了中国区工具榜+ProductHunt日榜。&lt;br&gt;&lt;br&gt;几个总结：&lt;br&gt;&lt;br&gt;1、光看排行榜看不出来这些应用是怎么推广的，其实我现在更关注他们流量是怎么来的，毕竟一款产品再好，再PMF，没有用户知道，也没用&lt;br&gt;&lt;br&gt;2、看了这么多榜单，需要建立一个评估需求是否能做的标准，目前暂时想到几个：&lt;br&gt;&lt;br&gt;从产品维度去分析：&lt;br&gt;&lt;br&gt;第一，天花板非常高的，可以考虑去做，就算是暂时不赚钱，也可以考虑；&lt;br&gt;&lt;br&gt;第二，足够简单，能够快速开发，最好后期不需要维护的，做完放在那里慢慢收费就行；&lt;br&gt;&lt;br&gt;从功能维度去分析：&lt;br&gt;&lt;br&gt;第一，自己非常喜欢的、自己非常需要的，可以做，这类是真有可能做成。&lt;br&gt;&lt;br&gt;第二，用户也非常需要，切中痛点，并且我来做能有优势（成本低、功能好、体验优、营销强等等）&lt;br&gt;&lt;br&gt;从收益角度去分析：&lt;br&gt;&lt;br&gt;第一，能直接赚钱的，可以做&lt;br&gt;&lt;br&gt;第二，能给其他产品引流的，可以做&lt;br&gt;&lt;br&gt;基于这些标准，可以过滤掉大部分应用了。&lt;br&gt;&lt;br&gt;3、基于上述这几个标准，未来的产品形态大概是这样：&lt;br&gt;&lt;br&gt;有1-2个拳头产品，大而全，极具竞争力；有一批小而美的应用，做AI时代的应用工厂；有一批打流量的产品，用来引流。&lt;br&gt;&lt;br&gt;再往深想想，这个形态有点像一个缩小版的字节，要真正做到，可能需要很长的时间，但是也值得去做。&lt;br&gt;&lt;br&gt;4、营销也需要系统的去学一下，有一个擅长的主要营销渠道，目前感觉还是从新媒体入手，做好内容，等待流量到来，爆发力很强，但是后劲不足，要搭配SEO来吸收长尾流量，投放暂时先不考虑（没那么多资金去试错）&lt;br&gt;&lt;br&gt;5、很多时候我们天然就会忽略很多需求，这个世界上还有很多圈子，比如冥想、骑行、二次元等等，针对这些人群其实都可以开发专用的应用/网站，但是需要去混圈子&lt;br&gt;&lt;br&gt;6、自从每天拿出几个小时单独去挖需求以后，发现思考会更深入一些，如果想做好一件事，一定要单独留出整块的时间。&lt;br&gt;&lt;br&gt;比如之前我号称自己每天看书，但是一年下来发现完整看完的书没几本，后来我就强迫每天至少看半小时，一年下来发现能看三四十本，只有把这件事当成正事去做，才有可能做好。&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fjo0pcN9ea1iX33d1kDZRilbz8oBv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/681ad75f7cb8c547e2c540bf</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/681ad75f7cb8c547e2c540bf</guid><pubDate>Wed, 07 May 2025 03:45:35 GMT</pubDate><author>张翼ZYi</author></item><item><title>Cursor对学生也免费一年了，有路子的快薅！ 🔗 https://www.cursor.com/students</title><description>Cursor对学生也免费一年了，有路子的快薅！&lt;br&gt;🔗 https://www.cursor.com/students&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FtZkgSeg1uRDFIDLX1VcisixpZAnv3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/681aaa94d6d52f2fb3810dff</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/681aaa94d6d52f2fb3810dff</guid><pubDate>Wed, 07 May 2025 00:34:28 GMT</pubDate><author>不务正业小胡同学</author></item><item><title>🚀 在 vibe coding 时，如果遇到大模型不熟悉的技术栈，即使把文档做了索引，效果也不尽如人意（可能跟各家 RAG 的实现细节有关）。 理想状态是：直接把整份文...</title><description>🚀 在 vibe coding 时，如果遇到大模型不熟悉的技术栈，即使把文档做了索引，效果也不尽如人意（可能跟各家 RAG 的实现细节有关）。&lt;br&gt;&lt;br&gt;理想状态是：直接把整份文档 下载下来，作为上下文扔给大模型处理。&lt;br&gt;&lt;br&gt;这里分享 2 个实用工具，帮你快速下载网站文档👇&lt;br&gt;&lt;br&gt;1️⃣ exa.ai 的 Crawling 工具&lt;br&gt;可以快速抓取某个网站的所有页面（上限 100 页），并导出为 JSON 格式。&lt;br&gt;&lt;br&gt;2️⃣ builder.io 的开源 gpt-crawler&lt;br&gt;GitHub 地址：https://github.com/BuilderIO/gpt-crawler&lt;br&gt;功能类似，同样支持整站抓取。如果你在使用时遇到 TypeScript 类型报错，可以参考这个 issue：https://github.com/BuilderIO/gpt-crawler/issues/151。&lt;br&gt;&lt;br&gt;⸻&lt;br&gt;&lt;br&gt;如果有其他的工具，或者更好的方式，也请评论分享下哦 😇&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FtRvYS_L6LBq6ijesblsxrH5GJTVv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/6819eae87cd0e3a4513bb86b</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6819eae87cd0e3a4513bb86b</guid><pubDate>Tue, 06 May 2025 10:56:40 GMT</pubDate><author>不孤独的二向箔</author></item><item><title>🫨</title><description>&lt;img src=&quot;https://static001.geekbang.org/static/infoq/img/infoq_icon.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;            &lt;a href=&quot;https://www.infoq.cn/news/ljlQa15u4r9KCSIA90Or&quot;&gt;全球最流行MCP应用市场，来自一位中国独立开发者_AI&amp;amp;大模型_罗燕珊_InfoQ精选文章&lt;/a&gt;&lt;br&gt;        &lt;br&gt;🫨</description><link>https://m.okjike.com/originalPosts/6819c1c89f9979a85a7a375d</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6819c1c89f9979a85a7a375d</guid><pubDate>Tue, 06 May 2025 08:01:12 GMT</pubDate><author>艾逗笔</author></item><item><title>设计师、独立开发必备图标与插画资源👇</title><description>设计师、独立开发必备图标与插画资源👇&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FhWcMDS41IS_4nfGlKAEmB6JGJjkv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/681950365809d4ed9eae1c77</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/681950365809d4ed9eae1c77</guid><pubDate>Mon, 05 May 2025 23:56:38 GMT</pubDate><author>出海去孵化器</author></item><item><title>「SEO新卷王」Pollo AI 创始人阿彪首谈：SEO 怎么做？红人怎么投？付费广告怎么搞？ - 十字路口Crossing</title><description>&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fn-V-e4dOc8LxBhO5hdRRkXzPm2R?imageMogr2/auto-orient/heic-exif/1/format/jpeg?imageView2/0/w/800/h/800/format/jpeg/q/80&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;            &lt;a href=&quot;https://www.xiaoyuzhoufm.com/episode/6818b16047ebeede7ede50f7?s=eyJ1IjoiNWU3ZWVjOGQxYmZiYmMzZGFkODJiYzgyIiwiZCI6MX0%3D&quot;&gt;「SEO新卷王」Pollo AI 创始人阿彪首谈：SEO 怎么做？红人怎么投？付费广告怎么搞？ - 十字路口Crossing&lt;/a&gt;&lt;br&gt;        &lt;br&gt;@阿彪Bill 彪哥这期播客，很值得大家听。</description><link>https://m.okjike.com/originalPosts/6818be205cf861568921cdaa</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6818be205cf861568921cdaa</guid><pubDate>Mon, 05 May 2025 13:33:20 GMT</pubDate><author>哥飞</author></item><item><title>每个人都有一堆的好想法，想改变世界 教你如何快速验证你的想法👇🏻 - 用 vibe-coding 搭一个简单的等待页（waitlist） - 接入 Google 表单，收集用户邮箱 -...</title><description>每个人都有一堆的好想法，想改变世界&lt;br&gt;教你如何快速验证你的想法👇🏻&lt;br&gt;&lt;br&gt;- 用 vibe-coding 搭一个简单的等待页（waitlist）&lt;br&gt;- 接入 Google 表单，收集用户邮箱&lt;br&gt;- 弄清楚谁才是你的目标用户&lt;br&gt;- 去他们活跃的地方，想办法宣传这个waitlist&lt;br&gt;- 收集100个邮箱&lt;br&gt;- 和其中10个人深入交流&lt;br&gt;- 尝试让2-3个人愿意为你的想法付费&lt;br&gt;&lt;br&gt;当你收到钱后，开始真正动手去构建&lt;br&gt;聆听用户反馈，搞清楚他们究竟在意什么，你才会打造出真正被用户需要的产品！</description><link>https://m.okjike.com/originalPosts/68179981dd1e80669098b3e5</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68179981dd1e80669098b3e5</guid><pubDate>Sun, 04 May 2025 16:44:49 GMT</pubDate><author>Yangyi.</author></item><item><title>最被社会接受的自毁形式： 👉过度思考。 这就是为什么你无法做决定、完成任何事情，或是不刷手机就睡不着。 以下是来自纳瓦尔击碎你「过度用脑执念」6个残酷真...</title><description>最被社会接受的自毁形式：&lt;br&gt;&lt;br&gt;👉过度思考。&lt;br&gt;&lt;br&gt;这就是为什么你无法做决定、完成任何事情，或是不刷手机就睡不着。&lt;br&gt;以下是来自纳瓦尔击碎你「过度用脑执念」6个残酷真相：&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FqDrXSIqmBmG-fPoUgzjB35Jn_zvv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fnz8YfIF-NmTmg23XVtiiovWEsV4v3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FtBsN0bO0VtKZ-k25VomThftrWsBv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FqFZvi6JpeYtqplHkUvb30rU1Zaov3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FgYFx3t6TqMd0N97QFvGtkPFsH0Kv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/6817666b97f435a697d9f25f</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6817666b97f435a697d9f25f</guid><pubDate>Sun, 04 May 2025 13:06:51 GMT</pubDate><author>出海去孵化器</author></item><item><title>关于 MCP 的几个理解误区： 1. 误区 1：MCP 协议需要大模型支持 MCP 全称模型上下文协议，是为了在用户与大模型对话过程中，补充上下文信息给大模型，让大模型更...</title><description>关于 MCP 的几个理解误区：&lt;br&gt;&lt;br&gt;1. 误区 1：MCP 协议需要大模型支持&lt;br&gt;&lt;br&gt;MCP 全称模型上下文协议，是为了在用户与大模型对话过程中，补充上下文信息给大模型，让大模型更准确的回答用户提问而设计的。&lt;br&gt;&lt;br&gt;在 MCP 出来之前，有多种方式可以实现上下文信息的补充，比如：&lt;br&gt;&lt;br&gt;- 记忆存储。把对话过程的历史消息存储下来，每次新提问，带上历史消息一起发送给大模型&lt;br&gt;- RAG。在让大模型回答问题之前，先从本地知识库或者互联网上检索信息，作为上下文补充给大模型&lt;br&gt;- Function Calling。传递一堆工具给大模型挑选，根据大模型的返回参数，调用工具，用工具返回的结果作为上下文补充给大模型&lt;br&gt;&lt;br&gt;理解了给大模型补充上下文的原理，就可以知道，MCP 的本质，是指导应用层，如何更好的补充上下文信息给大模型。&lt;br&gt;&lt;br&gt;模型收到回复提问请求时，MCP 工作已经完成了。&lt;br&gt;&lt;br&gt;结论：MCP 协议不需要大模型支持，哪怕你使用古老的 gpt-2 作为问答模型，依然可以使用 MCP 协议补充上下文信息。&lt;br&gt;&lt;br&gt;2. 误区 2：只有支持 Function Calling 的模型才支持 MCP 协议&lt;br&gt;&lt;br&gt;聊 MCP 协议，必须要理解 Function Calling 机制。&lt;br&gt;&lt;br&gt;- Function Calling 是一种交互范式。&lt;br&gt;&lt;br&gt;基本流程是应用层传递一堆工具给大模型，大模型意图识别，做一次 Pick Tool 操作，返回应该调用的工具名称和调用参数，再由应用层发起 Call Tool 操作，拿到结果重新给到大模型回答。&lt;br&gt;&lt;br&gt;Function Calling 这套机制下有三个角色：应用、资源方、大模型。&lt;br&gt;&lt;br&gt;两个核心步骤：Pick Tool 和 Call Tool。&lt;br&gt;&lt;br&gt;Pick Tool 需要大模型推理，Call Tool 需要应用与资源方交互。&lt;br&gt;&lt;br&gt;- MCP 协议是一套交互标准。可以理解为 MCP 是对 Function Calling 机制的包装与升级。&lt;br&gt;&lt;br&gt;MCP 协议定义了三个角色：主机、客户端、服务器。&lt;br&gt;&lt;br&gt;跟 Function Calling 机制相比，MCP 协议相当于是把 客户端-服务器 作为一个黑盒。&lt;br&gt;&lt;br&gt;整体视角看，MCP 协议有四个角色：主机应用、黑盒（客户端-服务器）、资源方、大模型&lt;br&gt;&lt;br&gt;主机把请求给到客户端，客户端请求服务器，服务器对接资源方，主机最终得到黑盒返回的结果，作为补充上下文给到大模型回答。&lt;br&gt;&lt;br&gt;Function Calling 是应用直接对接资源，MCP 是应用通过黑盒对接资源，对接更加标准化，资源接入成本更低。&lt;br&gt;&lt;br&gt;Function Calling 是应用直接定义一堆工具，MCP 是应用从 MCP 服务器获取定义好的工具，应用无需重复编码。&lt;br&gt;&lt;br&gt;涉及到工具调用的环节，MCP 与 Function Calling 的交互形式一致。都依赖大模型的 Pick Tool 能力。&lt;br&gt;&lt;br&gt;所谓的大模型支持 Function Calling，是指大模型在 Pick Tool 环节，有更好的理解和推理能力，最终能返回更加准确的 Tool 和参数。&lt;br&gt;&lt;br&gt;不支持 Function Calling 的模型，依然可以通过提示词工程实现 Pick Tool。只不过准确度不如支持 Function Calling 的模型。&lt;br&gt;&lt;br&gt;结论：不支持 Function Calling 的模型，依然可以使用 MCP 协议补充上下文信息。&lt;br&gt;&lt;br&gt;3. 误区 3：大模型原生支持 MCP 协议&lt;br&gt;&lt;br&gt;所谓的大模型原生支持 MCP 协议，正确的理解应该是大模型内化了 MCP 协议的定义，并且内置集成了大量基于 MCP 协议定义的工具。&lt;br&gt;&lt;br&gt;当接到用户提问时，应用即使不给大模型传递任何工具，大模型依然可以基于内化的工具列表进行推理，返回应该调用的工具名称和调用参数给应用。&lt;br&gt;&lt;br&gt;事实上，互联网上的资源是千差万别的，意味着对接资源的 MCP 服务器及其内部的工具是海量的，不可枚举的。&lt;br&gt;&lt;br&gt;另一个关键点是，某些资源是私有的，需要用户鉴权的，大模型训练时不可能内化用户的鉴权凭证。&lt;br&gt;&lt;br&gt;从这个角度来讲，大模型内化 MCP 协议下的海量工具，不现实也不可能。&lt;br&gt;&lt;br&gt;某些模型厂商，也许是为了蹭 MCP 的热度，某些自媒体，也许是对 MCP 协议理解不到位，宣称某大模型原生支持 MCP 协议。&lt;br&gt;&lt;br&gt;其实要表达的意思，也许只是，在随大模型一起发布的某个 agent 框架里面，加上了对 MCP 协议的支持。&lt;br&gt;&lt;br&gt;结论：大模型原生支持 MCP 协议，这种说法是不专业的。大模型现阶段不可能原生支持 MCP。&lt;br&gt;&lt;br&gt;本人认知有限，也许会有理解偏颇之处。欢迎补充交流。🙂</description><link>https://m.okjike.com/originalPosts/6811832d070109da492803d3</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/6811832d070109da492803d3</guid><pubDate>Wed, 30 Apr 2025 01:55:57 GMT</pubDate><author>艾逗笔</author></item></channel></rss>