<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link><atom:link href="http://rsshub.rssforever.com/jike/topic/55e02198dcef9f0e00d7b3c3" rel="self" type="application/rss+xml"></atom:link><description>开发者们分享，问答，也可以交友的地方。欢迎所有工程师！ - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><image><url>https://cdnv2.ruguoapp.com/FkFcHSgyNRo4yKxLYMVbDDP6gwdk.png?imageMogr2/auto-orient/heic-exif/1/format/jpeg/thumbnail/1000x1000%3E</url><title>JitHub程序员 - 即刻圈子</title><link>https://m.okjike.com/topics/55e02198dcef9f0e00d7b3c3</link></image><lastBuildDate>Tue, 30 Sep 2025 20:01:59 GMT</lastBuildDate><ttl>5</ttl><item><title>多语言 SEO 优化的正确做法： 1️⃣ 初期策略 -只做英文界面，让网站先在全球范围内积累流量数据 -确保网站架构支持未来的多语言扩展（URL 结构、hreflang 标签...</title><description>多语言 SEO 优化的正确做法：&lt;br&gt;&lt;br&gt;1️⃣ 初期策略&lt;br&gt;-只做英文界面，让网站先在全球范围内积累流量数据&lt;br&gt;-确保网站架构支持未来的多语言扩展（URL 结构、hreflang 标签等）&lt;br&gt;&lt;br&gt;2️⃣ 数据分析阶段&lt;br&gt;-分析访问者的地理位置分布&lt;br&gt;-关注德国、西班牙等非英语国家的流量占比（发达国家）&lt;br&gt;-评估这些地区的增长潜力和竞争情况&lt;br&gt;&lt;br&gt;3️⃣ 多语言 SEO 准备&lt;br&gt;-针对目标国家，收集当地语言的热门搜索关键词&lt;br&gt;-分析这些关键词的语义关联和搜索意图&lt;br&gt;-整理成按点击率排序的关键词列表（如100 个）&lt;br&gt;&lt;br&gt;4️⃣ 内容本地化&lt;br&gt;-不是简单翻译，而是根据当地语言习惯和搜索行为重写内容&lt;br&gt;-考虑文化差异和当地用户的表达方式&lt;br&gt;-确保关键词自然融入内容，而不是生硬堆砌&lt;br&gt;&lt;br&gt;5️⃣ 技术实现&lt;br&gt;-使用 hreflang 标签告诉搜索引擎各语言版本的对应关系&lt;br&gt;-考虑使用国家特定域名（如.de, .es）或子目录结构&lt;br&gt;-确保语言切换功能直观易用&lt;br&gt;&lt;br&gt;6️⃣ AI 辅助而非主导&lt;br&gt;-让 AI 基于已有的关键词数据进行优化，而不是从零开始翻译&lt;br&gt;-人工审核 AI 生成的内容，确保质量和本地化效果&lt;br&gt;&lt;br&gt;这种方法的优势在于：&lt;br&gt;-避免一开始就投入大量资源做多语言&lt;br&gt;-确保每一分钱都花在有回报的市场上&lt;br&gt;-内容真正符合目标市场的搜索习惯和文化背景</description><link>https://m.okjike.com/originalPosts/68dbfa1300c0686ab5c8a6a8</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68dbfa1300c0686ab5c8a6a8</guid><pubDate>Tue, 30 Sep 2025 15:41:07 GMT</pubDate><author>火耀星</author></item><item><title>做产品，如果一味听从用户建议，结果就是死路一条。 今年陆续做了一些产品，有些反馈还可以。 不少用户在使用过程中，会提出自己的一些建议。 今天就想聊聊用户...</title><description>做产品，如果一味听从用户建议，结果就是死路一条。&lt;br&gt;&lt;br&gt;今年陆续做了一些产品，有些反馈还可以。&lt;br&gt;&lt;br&gt;不少用户在使用过程中，会提出自己的一些建议。&lt;br&gt;&lt;br&gt;今天就想聊聊用户自己提的需求，哪些用户需求要满足，哪些用户需求不能满足。&lt;br&gt;&lt;br&gt;首先是一个大宗旨，用户提的需求是很有参考意义的，但是不能一味去满足，不要因为用户提了需求，就打断了自己的迭代节奏。&lt;br&gt;&lt;br&gt;其实这个表面上看是需求的取舍，本质上是对用户群体的取舍。&lt;br&gt;&lt;br&gt;一款产品不可能做到满足所有用户的需求，如果能做到，那这个产品一定活不下来。&lt;br&gt;&lt;br&gt;其实有两个极端的例子：&lt;br&gt;&lt;br&gt;MIUI最初确实听从用户建议，所以用户也非常乐意在论坛里提出自己的想法，官方响应用户建议很快。&lt;br&gt;&lt;br&gt;但是后来越来越臃肿，导致现在的口碑很差，甚至有点反噬了。&lt;br&gt;&lt;br&gt;微信则是另一个极端，不管用户骂成什么样，都不改，但是不妨碍大家都还是用微信。&lt;br&gt;&lt;br&gt;所以这里一定是有一个界限的，什么情况下应该听用户的，什么情况下不应该听用户的。&lt;br&gt;&lt;br&gt;我个人总结了3个标准，当然只是现在一点浅显的看法，未来可能会变：&lt;br&gt;&lt;br&gt;第一个标准：是否符合产品的核心定位。&lt;br&gt;&lt;br&gt;如果一个需求和你的产品定位、愿景、长期方向高度契合，那就值得优先考虑。&lt;br&gt;&lt;br&gt;否则，哪怕用户提得再多、声音再大，也不要轻易动摇。&lt;br&gt;&lt;br&gt;否则产品容易变得四不像，既无法满足核心用户，也留不住泛用户。&lt;br&gt;&lt;br&gt;第二个标准：需求的普适性和代表性。&lt;br&gt;&lt;br&gt;有些用户的反馈其实非常个性化，只是为了解决自己的某个特殊场景。&lt;br&gt;&lt;br&gt;这类需求要谨慎评估。&lt;br&gt;&lt;br&gt;第三个标准：实现成本和收益比。&lt;br&gt;&lt;br&gt;有的需求听起来很棒，甚至你自己也心动，但如果实现起来需要投入大量资源，就可以先加到 Todo List 里。&lt;br&gt;&lt;br&gt;所以本质上来说，做产品不是无条件迎合，而是找到属于你的那部分用户，把产品打磨得更极致、更有辨识度。&lt;br&gt;&lt;br&gt;用户的建议一定要听，但不能全听，更不能一听就做。</description><link>https://m.okjike.com/originalPosts/68dbcc2824106561cf7a51b2</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68dbcc2824106561cf7a51b2</guid><pubDate>Tue, 30 Sep 2025 12:25:12 GMT</pubDate><author>张翼ZYi</author></item><item><title>只做你专属的 biz card ！名牌来了！ nano 垫图，加下面 prompt 即可，还可以随意改颜色各种： name 改成 CoderJeffLee title 改成 Growth Indie Hacker email ...</title><description>只做你专属的 biz card ！名牌来了！&lt;br&gt;&lt;br&gt;nano 垫图，加下面 prompt 即可，还可以随意改颜色各种：&lt;br&gt;&lt;br&gt;name 改成 CoderJeffLee&lt;br&gt;title 改成 Growth Indie Hacker&lt;br&gt;email 改成 xxx&lt;br&gt;link 改成 xxx&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fm6kQEclIDTTvAB6OHuXRqJb4uPpv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68db9626e1724775b42d136d</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68db9626e1724775b42d136d</guid><pubDate>Tue, 30 Sep 2025 08:34:46 GMT</pubDate><author>子木聊AI出海</author></item><item><title>写给编程小白看的 Vibe Debugging 注意事项（2） 前情提要，在本系列的第一篇里，我着重提到「组件化思维」以及软件工程的一些基本概念，对于正在尝试 Vibe Codi...</title><description>写给编程小白看的 Vibe Debugging 注意事项（2） &lt;br&gt;&lt;br&gt;前情提要，在本系列的第一篇里，我着重提到「组件化思维」以及软件工程的一些基本概念，对于正在尝试 Vibe Coding 的编程小白来说，是必须掌握的思考方式与技能。&lt;br&gt;&lt;br&gt;这种思维方式与技能，在掌握了之后，当程序运行时遇到 bug，就不会直接把报错复制粘贴过去，而是可以迅速猜到问题产生的地方，从而提高与大模型的沟通效率，也能够节约 token。&lt;br&gt;&lt;br&gt;良好的结构，是软件开发中立于不败之地的重要前提。&lt;br&gt;&lt;br&gt;那么问题来了，什么是良好的软件结构？良好的软件结构有什么特点？如何了解自己手上开发的软件是否具备良好的结构？如何学习，让自己具备这种良好软件结构的嗅觉？&lt;br&gt;&lt;br&gt;*数据流清晰，符合单一原则*&lt;br&gt;&lt;br&gt;程序它有两个口，一个是入口，一个是出口。入口输入的是数据，出口输出的也是数据。程序的目的，就是为了处理数据，不管是处理 1+1 = 2，还是把字体改为加粗，都是对输入的数据进行处理，然后再输出。&lt;br&gt;&lt;br&gt;所以，良好的软件结构，在处理数据的时候，会非常清晰，这中间数据从组件 A 到组件 B，再到组件 C，这是一条清晰的路线，不会中间打岔。&lt;br&gt;&lt;br&gt;每个组件的职责也很清晰，从哪里获得数据，如何处理，输出什么结果——不过一个优秀的组件通常职责是单一的，它只解决一种，甚至是一个问题，绝不大包大揽。&lt;br&gt;&lt;br&gt;当然对于编程小白而言，直接观察数据的流动是有点难的，因为极大的可能，是连数据的类型都不懂。&lt;br&gt;&lt;br&gt;我一开始也这样，好像「鬼打墙」一样，同一个 bug 反复出现。当时我完全不懂数据类型，但是我用另外一个方法，让我掌握了数据的流动，那就是观察函数之间的相互调用。&lt;br&gt;&lt;br&gt;调用这个词看上去很专业，其实理解并不难，就是你复制了一个函数名，然后，在 VSCode 里面全局搜索一遍，看看这个函数名是否会出现其它的函数里。如果出现了，那么证明了这个函数被其它函数调用。&lt;br&gt;&lt;br&gt;这是一个最简单的方法，让你在完全不具备编程概念，去了解程序里数据流动的一个方法。另外就是，揣摩函数名的意思，LLM 给函数命名一般都很直白，尽管有时候显得啰嗦。&lt;br&gt;&lt;br&gt;总之，不管是不是编程小白，都不可避免要阅读代码。如果想提高自己的问题解决能力，那就养成习惯，不要一出现问题就马上问 LLM，而是应该先阅读问题产生的代码，看看问题发生的地方。&lt;br&gt;&lt;br&gt;*以终为始的思考方式*&lt;br&gt;&lt;br&gt;我不知道你身边是否有那种朋友，他们思维逻辑很清晰，而且总能快人一步发现问题，解决问题的能力也非常强。我身边挺多这种朋友的，经过观察，他们通常都喜欢用「以终为始」的方式去思考问题。&lt;br&gt;&lt;br&gt;「以终为始」就是，以最终目标出发点，一步步倒推，一直倒推到开始的第一步为止。这种思考通常比较消耗精力，但是只要习惯了，这种思考上的消耗就没什么大不了的。&lt;br&gt;&lt;br&gt;通常，在开发一个软件之前，我们在一步步倒推的时候，就能够摸出一个清晰的数据路线。我的习惯是，一边倒推一边用执笔写写画画，帮助自己思考。这时候，我会在草稿纸上列出这一次开发想达到的目标，然后我会往下列一个个要达到这个步骤。&lt;br&gt;&lt;br&gt;实际上，这些步骤，就是我在第一篇里提到的「组件」。第一个步骤要完成什么，然后才能让第二个步骤处理什么，以此类推，很快你得到了一张路线图，也同时得到了一个软件结构图。&lt;br&gt;&lt;br&gt;而在这个过程中， 如果你发现哪里步骤不清晰，哪里步骤有问题，那都是不好的结构，只要你逐步修正，一个良好的结构就会自然浮出水面。&lt;br&gt;&lt;br&gt;从任务执行的角度来看待程序，它就是一系列经过设计的，达到目的之前需要完成的步骤。&lt;br&gt;&lt;br&gt;*多参考优秀项目*&lt;br&gt;&lt;br&gt;这里涉及一个人的「品位」。大家也知道，「品味」是一种微妙的感觉，你说不出是为什么，但就是「真 TMD 的好！」&lt;br&gt;&lt;br&gt;如果想让自己在 Vibe Coding 的时候，培养对软件工程的品味，不必每一次都和神出鬼没的 bug 玩捉迷藏，我们可以直接参考优秀的项目，看看它们是怎么做的。&lt;br&gt;&lt;br&gt;我说的参考，不是打开一个 Github 仓库，然后看看里面的分别有什么文件就算完事了，而是要深入到代码层。就好像我刚才说的， 直接全局检索函数名，然后看看它都出现在哪里。&lt;br&gt;&lt;br&gt;而且现在有 LLM 以及 DeepWiki 还有 zread 等工具，都可以直接解读一个 Github 仓库里的代码之间的关系和结构。&lt;br&gt;&lt;br&gt;不过我还推荐我的做法，直接将一个仓库 Clone 到硬盘，然后启动 Gemini CLI，输入一句：这个项目是干什么的？它的结构是什么？&lt;br&gt;&lt;br&gt;然后，你就等着这位赛博菩萨吭哧吭哧地帮你整理出一个优秀的文档来，这个项目是干嘛的， 有什么组件，每个组件是干嘛的，罗列得很清楚。然后按照这份地图，打开对应的文件，参观里面的代码，看看别人是怎么写的。&lt;br&gt;&lt;br&gt;多读代码，多读别人的，多读自己的，然后对比一下。书读多了，其义自现。</description><link>https://m.okjike.com/originalPosts/68db522fc29dd3743f6975a8</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68db522fc29dd3743f6975a8</guid><pubDate>Tue, 30 Sep 2025 03:44:47 GMT</pubDate><author>Yibie</author></item><item><title>📈 把网站当成一本书 &amp; 内容产品来做增长的 SEO for AI Website · User Growth Playbook 🙏 因上努力，果上随缘，希望我自己能坚持玩玩写全... 《SEO 相关...</title><description>📈 把网站当成一本书 &amp;amp; 内容产品来做增长的 SEO for AI Website · User Growth Playbook&lt;br&gt;🙏 因上努力，果上随缘，希望我自己能坚持玩玩写全...&lt;br&gt;《SEO 相关杂文》自认为最佳到最杂 👇&lt;br&gt;&lt;br&gt;https://bysocket.com/seo/&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FoLWybwdXTehEBwJAi_G3BortwAgv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68db4a64fc979a6f2fd8d9df</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68db4a64fc979a6f2fd8d9df</guid><pubDate>Tue, 30 Sep 2025 03:11:32 GMT</pubDate><author>子木聊AI出海</author></item><item><title>#高质量外链分享 分享一个超高质量的外链分享 著名社区Indiehackers出的产品launchpad，免费提交，很简单，填下网站信息即可</title><description>&lt;img src=&quot;https://cdnv2.ruguoapp.com/icons/link.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;            &lt;a href=&quot;http://indiehackers.com/products&quot;&gt;http://indiehackers.com/products&lt;/a&gt;&lt;br&gt;        &lt;br&gt;#高质量外链分享 &lt;br&gt;分享一个超高质量的外链分享&lt;br&gt;&lt;br&gt;著名社区Indiehackers出的产品launchpad，免费提交，很简单，填下网站信息即可</description><link>https://m.okjike.com/originalPosts/68db2e7700c0686ab5b844ef</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68db2e7700c0686ab5b844ef</guid><pubDate>Tue, 30 Sep 2025 01:12:23 GMT</pubDate><author>小邱很行</author></item><item><title>发现找我们 “硬地骇客”做广告的产品就两类： 开发者（软件）产品和头发护理产品。 异常精准，是不是？</title><description>发现找我们 “硬地骇客”做广告的产品就两类：&lt;br&gt;&lt;br&gt;开发者（软件）产品和头发护理产品。&lt;br&gt;&lt;br&gt;异常精准，是不是？&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FhHA5CNpVltb73pBAKIbP1NTxSlov3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68da4fbdd9abb9785ddd7108</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68da4fbdd9abb9785ddd7108</guid><pubDate>Mon, 29 Sep 2025 09:22:05 GMT</pubDate><author>一啸-Skoo</author></item><item><title>faq是可以成为内链的，也是内链跳转博客文章： 这是一个非常聪明的做法。当用户在常见问题（FAQ）里点击一个问题时，不是直接显示答案，而是跳转到一个详细的博...</title><description>faq是可以成为内链的，也是内链跳转博客文章： 这是一个非常聪明的做法。当用户在常见问题（FAQ）里点击一个问题时，不是直接显示答案，而是跳转到一个详细的博客文章。这样做既为用户提供了更丰富的内容，也巧妙地增加了内部链接，让整个网站的页面互相连接，形成一张网，对提升网站整体权重非常有帮助。</description><link>https://m.okjike.com/originalPosts/68d9d94ed9abb9785dd413ae</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68d9d94ed9abb9785dd413ae</guid><pubDate>Mon, 29 Sep 2025 00:56:46 GMT</pubDate><author>火耀星</author></item><item><title>又找到一个词，假设gpts是150k月量，那新找的词是是一半75k搜索量。再去谷歌搜allintitle获取搜索结果数量，得出结论kdr值是0.45。 但由于这个是新词，9月份才出...</title><description>又找到一个词，假设gpts是150k月量，那新找的词是是一半75k搜索量。再去谷歌搜allintitle获取搜索结果数量，得出结论kdr值是0.45。&lt;br&gt;&lt;br&gt;但由于这个是新词，9月份才出现。所以可以不考虑kdr，直接先上就完事。&lt;br&gt;&lt;br&gt;老词去统计kdr或kd更合适。新词有一点搜索量的 用户需求明确的都可以做&lt;br&gt;&lt;br&gt;至于怎么知道我做的这个站能不能打得过别人？&lt;br&gt;&lt;br&gt;靠量去怼。&lt;br&gt;&lt;br&gt;这也是良辰美理论，做100个站你必赚钱。&lt;br&gt;&lt;br&gt;我也补一句，如果你上了100个站都没赚到美刀，你来找我，我请你吃饭！&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FifUOyXuziqqGLApvjj807VJVKXsv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/FnkOFQL5Uq_BFq1hudse5thh9mqfv3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68d72b7900c0686ab566a051</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68d72b7900c0686ab566a051</guid><pubDate>Sat, 27 Sep 2025 00:10:34 GMT</pubDate><author>火耀星</author></item><item><title>刚发现一个神器，GitHub官方的规范驱动开发工具！✨ 再也不用从零开始写代码了！ spec-kit 是GitHub推出的革命性开发框架，只需要用自然语言描述你想要的功能，A...</title><description>刚发现一个神器，GitHub官方的规范驱动开发工具！✨ 再也不用从零开始写代码了！&lt;br&gt;&lt;br&gt;spec-kit 是GitHub推出的革命性开发框架，只需要用自然语言描述你想要的功能，AI就能自动生成完整的可执行代码。最爽的是支持所有主流AI编程助手！&lt;br&gt;&lt;br&gt;以下是使用教程👇&lt;br&gt;🔗项目地址：github.com/github/spec-kit&lt;br&gt;配套工具推荐：Claude Code（最智能）、GitHub Copilot（官方推荐）、Cursor（最流行）&lt;br&gt;&lt;br&gt;对于程序员和产品经理来说，这就是个改变游戏规则的工具：&lt;br&gt;✅ /specify - 描述你想要什么功能&lt;br&gt;✅ /plan - 选择技术栈和架构&lt;br&gt;✅ /tasks - 生成任务列表&lt;br&gt;✅ AI自动实现所有功能&lt;br&gt;✅ 支持绿地开发、创意探索、迭代增强三种模式&lt;br&gt;✅ 一行命令初始化项目&lt;br&gt;&lt;br&gt;【使用价值】&lt;br&gt;对于开发团队来说，这个工具能够：&lt;br&gt;• 将产品需求直接转化为可执行代码&lt;br&gt;• 支持多种AI助手（Claude、Copilot、Gemini、Cursor）&lt;br&gt;• 提供完整的开发流程工具链&lt;br&gt;• 支持绿地开发、创意探索、迭代增强多种模式&lt;br&gt;&lt;br&gt;直接把产品需求变成代码，效率提升不止10倍！🚀&lt;br&gt;收藏了准没错 ⭐&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fl3jh0vbf-SmkJcEzUElPL7xdm4Bv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fjkq4pzD0lQdT91UZfj-53J6dT9Gv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://cdnv2.ruguoapp.com/Fiy0MW0l5h8WYmITsxCzagb6E3tVv3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://m.okjike.com/originalPosts/68d23b108742b201656bd853</link><guid isPermaLink="false">https://m.okjike.com/originalPosts/68d23b108742b201656bd853</guid><pubDate>Tue, 23 Sep 2025 06:15:44 GMT</pubDate><author>向度之桥</author></item></channel></rss>